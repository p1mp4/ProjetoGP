// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(ProjetoGestaoContext))]
    [Migration("20250622194543_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.AlunosProjeto", b =>
                {
                    b.Property<int>("AlunosProjetoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlunosProjetoId"));

                    b.Property<int>("CandidaturaId")
                        .HasColumnType("int");

                    b.Property<int>("PropostaProjetoId")
                        .HasColumnType("int");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("int");

                    b.Property<int?>("UtilizadorSecId")
                        .HasColumnType("int");

                    b.HasKey("AlunosProjetoId");

                    b.ToTable("AlunosProjeto");
                });

            modelBuilder.Entity("Backend.Models.AreaInvestigacao", b =>
                {
                    b.Property<int>("AreaInvestigacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AreaInvestigacaoId"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AreaInvestigacaoId");

                    b.ToTable("AreaInvestigacao");
                });

            modelBuilder.Entity("Backend.Models.Candidatura", b =>
                {
                    b.Property<int>("CandidaturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CandidaturaId"));

                    b.Property<DateTime>("DataSubmissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdemPreferencia")
                        .HasColumnType("int");

                    b.Property<int>("PropostaProjetoId")
                        .HasColumnType("int");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("int");

                    b.Property<int?>("UtilizadorSecId")
                        .HasColumnType("int");

                    b.HasKey("CandidaturaId");

                    b.ToTable("Candidatura");
                });

            modelBuilder.Entity("Backend.Models.GrupoUtilizador", b =>
                {
                    b.Property<int>("GrupoUtilizadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrupoUtilizadorId"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GrupoUtilizadorId");

                    b.ToTable("GrupoUtilizador");
                });

            modelBuilder.Entity("Backend.Models.LikeProposta", b =>
                {
                    b.Property<int>("LikePropostaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LikePropostaId"));

                    b.Property<DateTime>("DataLike")
                        .HasColumnType("datetime2");

                    b.Property<int>("PropostaProjetoId")
                        .HasColumnType("int");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("int");

                    b.HasKey("LikePropostaId");

                    b.HasIndex("PropostaProjetoId");

                    b.HasIndex("UtilizadorId", "PropostaProjetoId")
                        .IsUnique();

                    b.ToTable("LikeProposta");
                });

            modelBuilder.Entity("Backend.Models.Orientador", b =>
                {
                    b.Property<int>("OrientadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrientadorId"));

                    b.Property<int>("PropostaProjetoId")
                        .HasColumnType("int");

                    b.Property<string>("TipoOrientador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("int");

                    b.HasKey("OrientadorId");

                    b.ToTable("Orientador");
                });

            modelBuilder.Entity("Backend.Models.PropostaProjeto", b =>
                {
                    b.Property<int>("PropostaProjetoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PropostaProjetoId"));

                    b.Property<int>("AnoLetivo")
                        .HasColumnType("int");

                    b.Property<string>("Apresentacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AreaInvestigacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Caminho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CentroInvestigacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dependencias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Editavel")
                        .HasColumnType("bit");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Objetivos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visivel")
                        .HasColumnType("bit");

                    b.HasKey("PropostaProjetoId");

                    b.ToTable("PropostaProjeto");
                });

            modelBuilder.Entity("Backend.Models.SubmissaoProjeto", b =>
                {
                    b.Property<int>("SubmissaoProjetoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubmissaoProjetoId"));

                    b.Property<DateTime>("DataUpload")
                        .HasColumnType("datetime2");

                    b.Property<int>("PropostaId")
                        .HasColumnType("int");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("int");

                    b.HasKey("SubmissaoProjetoId");

                    b.ToTable("SubmissoesProjeto");
                });

            modelBuilder.Entity("Backend.Models.Utilizador", b =>
                {
                    b.Property<int>("UtilizadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UtilizadorId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GrupoUtilizadorId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PalavraPasseHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UtilizadorId");

                    b.HasIndex("GrupoUtilizadorId");

                    b.ToTable("Utilizador");
                });

            modelBuilder.Entity("Backend.Models.LikeProposta", b =>
                {
                    b.HasOne("Backend.Models.PropostaProjeto", "PropostaProjeto")
                        .WithMany()
                        .HasForeignKey("PropostaProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Utilizador", "Utilizador")
                        .WithMany()
                        .HasForeignKey("UtilizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PropostaProjeto");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("Backend.Models.Utilizador", b =>
                {
                    b.HasOne("Backend.Models.GrupoUtilizador", null)
                        .WithMany("Utilizadores")
                        .HasForeignKey("GrupoUtilizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Models.GrupoUtilizador", b =>
                {
                    b.Navigation("Utilizadores");
                });
#pragma warning restore 612, 618
        }
    }
}
